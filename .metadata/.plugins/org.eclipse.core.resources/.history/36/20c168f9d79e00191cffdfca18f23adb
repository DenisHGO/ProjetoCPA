package application;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.Orientation;
import javafx.scene.Node;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import javafx.scene.control.TextField;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;

public class FMXLInicialController implements Initializable {

	@FXML
	public Button idmusicas;

	@FXML
	private ListView<String> idlistamusicas;

	ObservableList listMusicas = FXCollections.observableArrayList();
	
	ObservableList teste2 = FXCollections.observableArrayList();
	
	String helper = System.getProperty("user.dir");

	@FXML
	private VBox idletramusicas;

	ArrayList filesNames = new ArrayList();
	ArrayList textoMusicas = new ArrayList();

	public void acaoBotaoMusicas(ActionEvent event) {

		File arquivo = new File(helper+"/src/musicas");
		/*File arquivo = new File(
				"C:\\Users\\denis.h.oliveira\\OneDrive - Accenture\\Documents\\ProjetoCPA\\ApresentCPA\\src\\musicas");*/
		
		File[] files = arquivo.listFiles();
		filesNames.clear();

		/*codigo para ordenacao da lista de arquivos comentado, pois nao foi necessario.
		 * Arrays.sort (files, new NumericFileNameComparator()); for (File f :
		 * files) { System.out.println (f); }
		 */

		// pegando todos nomes das musicas
		for (int i = 0; i < files.length; i++) {
			File arquivos = files[i];
			filesNames.add(arquivos.getName());
		}

		// ObservableList<String> seasonList =
		// FXCollections.<String>observableArrayList(filesNames);
		listMusicas.removeAll(listMusicas);
		listMusicas = FXCollections.<String> observableArrayList(filesNames);

		// seasons.setItems(listMusicas);
		idlistamusicas.setOrientation(Orientation.VERTICAL);
		idlistamusicas.setItems(listMusicas);

	}

	public void acaoExibirMusicas(ActionEvent event) throws IOException {

		String musicaSelecionada = idlistamusicas.getSelectionModel().getSelectedItem();
		
		/*BufferedReader buffRead = new BufferedReader(new FileReader(
				"C:\\Users\\denis.h.oliveira\\OneDrive - Accenture\\Documents\\ProjetoCPA\\ApresentCPA\\src\\musicas\\"+musicaSelecionada));*/
		
		BufferedReader buffRead = new BufferedReader(new FileReader(helper+"/src/musicas/"+musicaSelecionada));
		String linha = "";
		idletramusicas.getChildren().clear();
		ArrayList<String> textoMusicasTemp = new ArrayList<String>();
		ArrayList<Node> nodes = new ArrayList<Node>();
		
		while (true) {
			if (linha != null) {
				// list.add(linha);
				// System.out.println(linha);
			} else
				break;
			linha = buffRead.readLine();
			Text text1 = new Text(linha);
			textoMusicas.add(linha);			
			
			/*if (text1.getText().equals("")) {
				idletramusicas.getChildren().add(new Button("test1"));
			} else if(j == 4){
				
				//idletramusicas.getChildren().add(new Button(text1.getText().toString()));\
				idletramusicas.getChildren().addAll(textoMusicas);
				j = 0;
			}else if (j >= 0 && j < 4){
				textoMusicas.add(text1);
				j++;
			}*/

			
		}
		
		
		for(int i=0; i<textoMusicas.size();i++){
			
			if(textoMusicas.get(i).toString().equals("")){
				
				
				idletramusicas.getChildren().add(new Button("test1"));
			}else{				
				
				nodes.add(textoMusicas.get(i).toString());
				textoMusicasTemp.add(textoMusicas.get(i).toString());
				//idletramusicas.getChildren().add(new Button(textoMusicas.get(i).toString()));
			}
		}
		
		buffRead.close();
	}
	
	public String buscarArquivo(){
		
		
		
		
		return null;	
	}

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// TODO Auto-generated method stub

	}

}
